user www www;
worker_processes 8;
pid <%= nginx_pid %>;

events {
  worker_connections 1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay off;
  keepalive_timeout 30;
  client_max_body_size 16m;
  server_names_hash_max_size 8192;

  include mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - [$time_local] ($http_host) "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
  access_log logs/access.log main;

  gzip on;
  gzip_min_length 1024;
  #gzip_vary on;
  gzip_comp_level 9;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_buffers 16 8k; # handle gzipped output up to 128kB

  # remove nginx version from headers and error pages
  server_tokens off;

  # Don't edit this to serve content; instead, add a vhost.
  server {
    listen 127.0.0.1:80;
    server_name localhost;

    location / {
      root html;
      index index.html;
    }
  }

  # sets a new variable called $tc_client_ip to the HTTP_FASTLY_CLIENT_IP if available,
  # otherwise to the IP of the current client. When proxying to a rails app, set this
  # value as the "Client-Ip" header and rails will use it as the best guess of the
  # client IP
  map $http_fastly_client_ip $tc_client_ip {
    "" $remote_addr;
    default $http_fastly_client_ip;
  }

  # Pull in all enabled vhosts
  include vhosts/on/*.conf;
}
